{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\currency-converter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currencyData, setCurrencyData] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          setCurrencyData(results.data);\n        }\n      });\n    }\n  };\n\n  // Function to convert rates based on the selected base currency\n  const convertRates = baseCurrency => {\n    var _currencyData$find;\n    const baseRate = (_currencyData$find = currencyData.find(currency => currency.Currency === baseCurrency)) === null || _currencyData$find === void 0 ? void 0 : _currencyData$find.Rate;\n    const newRates = currencyData.map(currency => ({\n      Currency: currency.Currency,\n      ConvertedRate: (currency.Rate / baseRate).toFixed(4)\n    }));\n    setConvertedRates(newRates);\n  };\n  const currencyOptions = currencyData.map(currency => ({\n    value: currency.Currency,\n    label: currency.Currency\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currencyData.length > 0 && /*#__PURE__*/_jsxDEV(Select, {\n      options: currencyOptions,\n      onChange: option => {\n        setSelectedCurrency(option.value);\n        convertRates(option.value);\n      },\n      placeholder: \"Select Base Currency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), convertedRates.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Converted Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: convertedRates.map((currency, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: currency.Currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: currency.ConvertedRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XJxiYPvxyRVkG2vNsMKeNcrVu3Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Papa","Select","jsxDEV","_jsxDEV","App","_s","currencyData","setCurrencyData","selectedCurrency","setSelectedCurrency","convertedRates","setConvertedRates","handleFileUpload","event","file","target","files","parse","header","complete","results","data","convertRates","baseCurrency","_currencyData$find","baseRate","find","currency","Currency","Rate","newRates","map","ConvertedRate","toFixed","currencyOptions","value","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","length","options","option","placeholder","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/currency-converter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Select from \"react-select\";\n\nfunction App() {\n  const [currencyData, setCurrencyData] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    \n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: (results) => {\n          setCurrencyData(results.data);\n        }\n      });\n    }\n  };\n\n  // Function to convert rates based on the selected base currency\n  const convertRates = (baseCurrency) => {\n    const baseRate = currencyData.find(currency => currency.Currency === baseCurrency)?.Rate;\n    const newRates = currencyData.map(currency => ({\n      Currency: currency.Currency,\n      ConvertedRate: (currency.Rate / baseRate).toFixed(4)\n    }));\n    setConvertedRates(newRates);\n  };\n\n  const currencyOptions = currencyData.map(currency => ({\n    value: currency.Currency,\n    label: currency.Currency\n  }));\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Converter</h1>\n\n      {/* Upload CSV file */}\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n\n      {/* Currency Select Dropdown */}\n      {currencyData.length > 0 && (\n        <Select\n          options={currencyOptions}\n          onChange={(option) => {\n            setSelectedCurrency(option.value);\n            convertRates(option.value);\n          }}\n          placeholder=\"Select Base Currency\"\n        />\n      )}\n\n      {/* Display converted rates */}\n      {convertedRates.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Currency</th>\n              <th>Converted Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {convertedRates.map((currency, index) => (\n              <tr key={index}>\n                <td>{currency.Currency}</td>\n                <td>{currency.ConvertedRate}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}