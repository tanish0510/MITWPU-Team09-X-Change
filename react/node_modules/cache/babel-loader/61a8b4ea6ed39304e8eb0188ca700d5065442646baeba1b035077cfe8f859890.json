{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\currency-converter\\\\src\\\\CurrencyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrencyChart = () => {\n  _s();\n  const [currency, setCurrency] = useState('USD');\n  const [period, setPeriod] = useState('1week');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const chartRef = useRef(null);\n  const fetchExchangeRates = async (currency, period, startDate, endDate) => {\n    let url = `http://localhost:5000/api/exchangeRates/${currency}/`;\n    if (period === 'custom' && startDate && endDate) {\n      url += `${startDate}:${endDate}`;\n    } else {\n      url += period;\n    }\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching exchange rates:', error);\n      return [];\n    }\n  };\n  const renderChart = async () => {\n    const rates = await fetchExchangeRates(currency, period, startDate, endDate);\n    if (rates.length === 0) {\n      console.error('No rates available to render the chart.');\n      return;\n    }\n    const labels = rates.map(rate => new Date(rate.date).toLocaleDateString());\n    const data = rates.map(rate => rate.rate);\n\n    // Calculate volatility and risk levels\n    const {\n      volatility,\n      riskLevels\n    } = calculateVolatilityAndRisk(data);\n    const lineColors = getLineColors(riskLevels);\n\n    // Render the chart\n    if (chartRef.current) {\n      chartRef.current.destroy(); // Clear previous chart if it exists\n    }\n    chartRef.current = new Chart(document.getElementById('exchangeRateChart').getContext('2d'), {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: `Exchange Rate (${currency})`,\n          data: data,\n          borderColor: lineColors,\n          borderWidth: 2,\n          fill: false,\n          tension: 0.1,\n          pointBackgroundColor: lineColors\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                const risk = riskLevels[tooltipItem.dataIndex - 1];\n                return `Rate: ${tooltipItem.raw}, Risk: ${risk}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Date'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Exchange Rate'\n            }\n          }\n        }\n      }\n    });\n  };\n  const calculateVolatilityAndRisk = data => {\n    let volatility = [];\n    let riskLevels = [];\n    for (let i = 1; i < data.length; i++) {\n      const percentageChange = (data[i] - data[i - 1]) / data[i - 1] * 100;\n      volatility.push(Math.abs(percentageChange));\n      if (Math.abs(percentageChange) <= 1) {\n        riskLevels.push('Low');\n      } else if (Math.abs(percentageChange) > 1 && Math.abs(percentageChange) <= 3) {\n        riskLevels.push('Medium');\n      } else {\n        riskLevels.push('High');\n      }\n    }\n    return {\n      volatility,\n      riskLevels\n    };\n  };\n  const getLineColors = riskLevels => {\n    return riskLevels.map(risk => {\n      if (risk === 'Low') {\n        return 'rgba(75, 192, 192, 1)'; // Green\n      } else if (risk === 'Medium') {\n        return 'rgba(255, 206, 86, 1)'; // Yellow\n      } else {\n        return 'rgba(255, 99, 132, 1)'; // Red\n      }\n    });\n  };\n  const handleFetchRates = () => {\n    renderChart();\n  };\n  useEffect(() => {\n    renderChart(); // Initial rendering on component mount\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy(); // Clean up on unmount\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exchange Rate Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"exchangeRateChart\",\n      width: \"600\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: currency,\n        onChange: e => setCurrency(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USD\",\n          children: \"USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: period,\n        onChange: e => setPeriod(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1day\",\n          children: \"Last 1 Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1week\",\n          children: \"Last 1 Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1month\",\n          children: \"Last 1 Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1year\",\n          children: \"Last 1 Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"custom\",\n          children: \"Custom Date Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), period === 'custom' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchRates,\n        children: \"Fetch Rates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyChart, \"NkM8JRg5iLI/i7/pIeSdJrzO1DM=\");\n_c = CurrencyChart;\nexport default CurrencyChart;\nvar _c;\n$RefreshReg$(_c, \"CurrencyChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrencyChart","_s","currency","setCurrency","period","setPeriod","startDate","setStartDate","endDate","setEndDate","chartRef","fetchExchangeRates","url","response","fetch","ok","Error","data","json","error","console","renderChart","rates","length","labels","map","rate","Date","date","toLocaleDateString","volatility","riskLevels","calculateVolatilityAndRisk","lineColors","getLineColors","current","destroy","document","getElementById","getContext","type","datasets","label","borderColor","borderWidth","fill","tension","pointBackgroundColor","options","responsive","plugins","tooltip","callbacks","tooltipItem","risk","dataIndex","raw","scales","x","title","display","text","y","i","percentageChange","push","Math","abs","handleFetchRates","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/currency-converter/src/CurrencyChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst CurrencyChart = () => {\r\n  const [currency, setCurrency] = useState('USD');\r\n  const [period, setPeriod] = useState('1week');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const chartRef = useRef(null);\r\n\r\n  const fetchExchangeRates = async (currency, period, startDate, endDate) => {\r\n    let url = `http://localhost:5000/api/exchangeRates/${currency}/`;\r\n    if (period === 'custom' && startDate && endDate) {\r\n      url += `${startDate}:${endDate}`;\r\n    } else {\r\n      url += period;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching exchange rates:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const renderChart = async () => {\r\n    const rates = await fetchExchangeRates(currency, period, startDate, endDate);\r\n\r\n    if (rates.length === 0) {\r\n      console.error('No rates available to render the chart.');\r\n      return;\r\n    }\r\n\r\n    const labels = rates.map(rate => new Date(rate.date).toLocaleDateString());\r\n    const data = rates.map(rate => rate.rate);\r\n\r\n    // Calculate volatility and risk levels\r\n    const { volatility, riskLevels } = calculateVolatilityAndRisk(data);\r\n\r\n    const lineColors = getLineColors(riskLevels);\r\n\r\n    // Render the chart\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy(); // Clear previous chart if it exists\r\n    }\r\n\r\n    chartRef.current = new Chart(document.getElementById('exchangeRateChart').getContext('2d'), {\r\n      type: 'line',\r\n      data: {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: `Exchange Rate (${currency})`,\r\n          data: data,\r\n          borderColor: lineColors,\r\n          borderWidth: 2,\r\n          fill: false,\r\n          tension: 0.1,\r\n          pointBackgroundColor: lineColors\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          tooltip: {\r\n            callbacks: {\r\n              label: (tooltipItem) => {\r\n                const risk = riskLevels[tooltipItem.dataIndex - 1];\r\n                return `Rate: ${tooltipItem.raw}, Risk: ${risk}`;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Date'\r\n            }\r\n          },\r\n          y: {\r\n            title: {\r\n              display: true,\r\n              text: 'Exchange Rate'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const calculateVolatilityAndRisk = (data) => {\r\n    let volatility = [];\r\n    let riskLevels = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      const percentageChange = ((data[i] - data[i - 1]) / data[i - 1]) * 100;\r\n      volatility.push(Math.abs(percentageChange));\r\n      if (Math.abs(percentageChange) <= 1) {\r\n        riskLevels.push('Low');\r\n      } else if (Math.abs(percentageChange) > 1 && Math.abs(percentageChange) <= 3) {\r\n        riskLevels.push('Medium');\r\n      } else {\r\n        riskLevels.push('High');\r\n      }\r\n    }\r\n    return { volatility, riskLevels };\r\n  };\r\n\r\n  const getLineColors = (riskLevels) => {\r\n    return riskLevels.map(risk => {\r\n      if (risk === 'Low') {\r\n        return 'rgba(75, 192, 192, 1)'; // Green\r\n      } else if (risk === 'Medium') {\r\n        return 'rgba(255, 206, 86, 1)'; // Yellow\r\n      } else {\r\n        return 'rgba(255, 99, 132, 1)'; // Red\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFetchRates = () => {\r\n    renderChart();\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderChart(); // Initial rendering on component mount\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy(); // Clean up on unmount\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Exchange Rate Graph</h1>\r\n      <canvas id=\"exchangeRateChart\" width=\"600\" height=\"400\"></canvas>\r\n      <div>\r\n        <select value={currency} onChange={(e) => setCurrency(e.target.value)}>\r\n          <option value=\"USD\">USD</option>\r\n          {/* Add other currencies as needed */}\r\n        </select>\r\n        <select value={period} onChange={(e) => setPeriod(e.target.value)}>\r\n          <option value=\"1day\">Last 1 Day</option>\r\n          <option value=\"1week\">Last 1 Week</option>\r\n          <option value=\"1month\">Last 1 Month</option>\r\n          <option value=\"1year\">Last 1 Year</option>\r\n          <option value=\"custom\">Custom Date Range</option>\r\n        </select>\r\n        {period === 'custom' && (\r\n          <>\r\n            <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n            <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n          </>\r\n        )}\r\n        <button onClick={handleFetchRates}>Fetch Rates</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}