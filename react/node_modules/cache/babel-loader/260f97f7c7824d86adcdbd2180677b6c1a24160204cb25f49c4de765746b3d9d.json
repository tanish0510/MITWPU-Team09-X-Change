{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\currency-converter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currencyData, setCurrencyData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          const data = results.data;\n\n          // Get unique dates\n          const uniqueDates = [...new Set(data.map(row => row.Date))];\n          setDates(uniqueDates);\n          setCurrencyData(data);\n        }\n      });\n    }\n  };\n\n  // Convert rates based on selected date and base currency\n  const convertRates = baseCurrency => {\n    if (!selectedDate) return;\n    const selectedRow = currencyData.find(row => row.Date === selectedDate);\n    if (selectedRow) {\n      const baseRate = parseFloat(selectedRow[baseCurrency]);\n      const newRates = Object.keys(selectedRow).filter(key => key !== 'Date').map(currency => ({\n        Currency: currency,\n        ConvertedRate: (parseFloat(selectedRow[currency]) / baseRate).toFixed(4)\n      }));\n      setConvertedRates(newRates);\n    }\n  };\n  const dateOptions = dates.map(date => ({\n    value: date,\n    label: date\n  }));\n  const currencyOptions = currencyData.length > 0 ? Object.keys(currencyData[0]).filter(key => key !== 'Date').map(currency => ({\n    value: currency,\n    label: currency\n  })) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), dates.length > 0 && /*#__PURE__*/_jsxDEV(Select, {\n      options: dateOptions,\n      onChange: option => setSelectedDate(option.value),\n      placeholder: \"Select Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), currencyData.length > 0 && selectedDate && /*#__PURE__*/_jsxDEV(Select, {\n      options: currencyOptions,\n      onChange: option => {\n        setSelectedCurrency(option.value);\n        convertRates(option.value);\n      },\n      placeholder: \"Select Base Currency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), convertedRates.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Converted Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: convertedRates.map((currency, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: currency.Currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: currency.ConvertedRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"td6wPS/2p4/GWVF7H4+/xa/h3lY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Papa","Select","jsxDEV","_jsxDEV","App","_s","currencyData","setCurrencyData","dates","setDates","selectedDate","setSelectedDate","selectedCurrency","setSelectedCurrency","convertedRates","setConvertedRates","handleFileUpload","event","file","target","files","parse","header","complete","results","data","uniqueDates","Set","map","row","Date","convertRates","baseCurrency","selectedRow","find","baseRate","parseFloat","newRates","Object","keys","filter","key","currency","Currency","ConvertedRate","toFixed","dateOptions","date","value","label","currencyOptions","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","options","option","placeholder","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/currency-converter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Select from \"react-select\";\n\nfunction App() {\n  const [currencyData, setCurrencyData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: (results) => {\n          const data = results.data;\n\n          // Get unique dates\n          const uniqueDates = [...new Set(data.map(row => row.Date))];\n          setDates(uniqueDates);\n          setCurrencyData(data);\n        }\n      });\n    }\n  };\n\n  // Convert rates based on selected date and base currency\n  const convertRates = (baseCurrency) => {\n    if (!selectedDate) return;\n\n    const selectedRow = currencyData.find(row => row.Date === selectedDate);\n\n    if (selectedRow) {\n      const baseRate = parseFloat(selectedRow[baseCurrency]);\n      \n      const newRates = Object.keys(selectedRow).filter(key => key !== 'Date').map(currency => ({\n        Currency: currency,\n        ConvertedRate: (parseFloat(selectedRow[currency]) / baseRate).toFixed(4),\n      }));\n\n      setConvertedRates(newRates);\n    }\n  };\n\n  const dateOptions = dates.map(date => ({ value: date, label: date }));\n  const currencyOptions = currencyData.length > 0\n    ? Object.keys(currencyData[0]).filter(key => key !== 'Date').map(currency => ({\n        value: currency,\n        label: currency,\n      }))\n    : [];\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Converter</h1>\n\n      {/* Upload CSV file */}\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n\n      {/* Date Select Dropdown */}\n      {dates.length > 0 && (\n        <Select\n          options={dateOptions}\n          onChange={(option) => setSelectedDate(option.value)}\n          placeholder=\"Select Date\"\n        />\n      )}\n\n      {/* Currency Select Dropdown */}\n      {currencyData.length > 0 && selectedDate && (\n        <Select\n          options={currencyOptions}\n          onChange={(option) => {\n            setSelectedCurrency(option.value);\n            convertRates(option.value);\n          }}\n          placeholder=\"Select Base Currency\"\n        />\n      )}\n\n      {/* Display converted rates */}\n      {convertedRates.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Currency</th>\n              <th>Converted Rate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {convertedRates.map((currency, index) => (\n              <tr key={index}>\n                <td>{currency.Currency}</td>\n                <td>{currency.ConvertedRate}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}