{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{Chart}from'chart.js';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CurrencyChart=()=>{const[currency,setCurrency]=useState('USD');const[period,setPeriod]=useState('1week');const[startDate,setStartDate]=useState('');const[endDate,setEndDate]=useState('');const chartRef=useRef(null);const fetchExchangeRates=async(currency,period,startDate,endDate)=>{let url=`http://localhost:5000/api/exchangeRates/${currency}/`;if(period==='custom'&&startDate&&endDate){url+=`${startDate}:${endDate}`;}else{url+=period;}try{const response=await fetch(url);if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;}catch(error){console.error('Error fetching exchange rates:',error);return[];}};const renderChart=async()=>{const rates=await fetchExchangeRates(currency,period,startDate,endDate);if(rates.length===0){console.error('No rates available to render the chart.');return;}const labels=rates.map(rate=>new Date(rate.date).toLocaleDateString());const data=rates.map(rate=>rate.rate);// Calculate volatility and risk levels\nconst{volatility,riskLevels}=calculateVolatilityAndRisk(data);const lineColors=getLineColors(riskLevels);// Render the chart\nif(chartRef.current){chartRef.current.destroy();// Clear previous chart if it exists\n}chartRef.current=new Chart(document.getElementById('exchangeRateChart').getContext('2d'),{type:'line',data:{labels:labels,datasets:[{label:`Exchange Rate (${currency})`,data:data,borderColor:lineColors,borderWidth:2,fill:false,tension:0.1,pointBackgroundColor:lineColors}]},options:{responsive:true,plugins:{tooltip:{callbacks:{label:tooltipItem=>{const risk=riskLevels[tooltipItem.dataIndex-1];return`Rate: ${tooltipItem.raw}, Risk: ${risk}`;}}}},scales:{x:{title:{display:true,text:'Date'}},y:{title:{display:true,text:'Exchange Rate'}}}}});};const calculateVolatilityAndRisk=data=>{let volatility=[];let riskLevels=[];for(let i=1;i<data.length;i++){const percentageChange=(data[i]-data[i-1])/data[i-1]*100;volatility.push(Math.abs(percentageChange));if(Math.abs(percentageChange)<=1){riskLevels.push('Low');}else if(Math.abs(percentageChange)>1&&Math.abs(percentageChange)<=3){riskLevels.push('Medium');}else{riskLevels.push('High');}}return{volatility,riskLevels};};const getLineColors=riskLevels=>{return riskLevels.map(risk=>{if(risk==='Low'){return'rgba(75, 192, 192, 1)';// Green\n}else if(risk==='Medium'){return'rgba(255, 206, 86, 1)';// Yellow\n}else{return'rgba(255, 99, 132, 1)';// Red\n}});};const handleFetchRates=()=>{renderChart();};useEffect(()=>{renderChart();// Initial rendering on component mount\nreturn()=>{if(chartRef.current){chartRef.current.destroy();// Clean up on unmount\n}};},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Exchange Rate Graph\"}),/*#__PURE__*/_jsx(\"canvas\",{id:\"exchangeRateChart\",width:\"600\",height:\"400\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"select\",{value:currency,onChange:e=>setCurrency(e.target.value),children:/*#__PURE__*/_jsx(\"option\",{value:\"USD\",children:\"USD\"})}),/*#__PURE__*/_jsxs(\"select\",{value:period,onChange:e=>setPeriod(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"1day\",children:\"Last 1 Day\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1week\",children:\"Last 1 Week\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1month\",children:\"Last 1 Month\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1year\",children:\"Last 1 Year\"}),/*#__PURE__*/_jsx(\"option\",{value:\"custom\",children:\"Custom Date Range\"})]}),period==='custom'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFetchRates,children:\"Fetch Rates\"})]})]});};export default CurrencyChart;","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CurrencyChart","currency","setCurrency","period","setPeriod","startDate","setStartDate","endDate","setEndDate","chartRef","fetchExchangeRates","url","response","fetch","ok","Error","data","json","error","console","renderChart","rates","length","labels","map","rate","Date","date","toLocaleDateString","volatility","riskLevels","calculateVolatilityAndRisk","lineColors","getLineColors","current","destroy","document","getElementById","getContext","type","datasets","label","borderColor","borderWidth","fill","tension","pointBackgroundColor","options","responsive","plugins","tooltip","callbacks","tooltipItem","risk","dataIndex","raw","scales","x","title","display","text","y","i","percentageChange","push","Math","abs","handleFetchRates","children","id","width","height","value","onChange","e","target","onClick"],"sources":["C:/Users/Admin/currency-converter/src/CurrencyChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst CurrencyChart = () => {\r\n  const [currency, setCurrency] = useState('USD');\r\n  const [period, setPeriod] = useState('1week');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const chartRef = useRef(null);\r\n\r\n  const fetchExchangeRates = async (currency, period, startDate, endDate) => {\r\n    let url = `http://localhost:5000/api/exchangeRates/${currency}/`;\r\n    if (period === 'custom' && startDate && endDate) {\r\n      url += `${startDate}:${endDate}`;\r\n    } else {\r\n      url += period;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching exchange rates:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const renderChart = async () => {\r\n    const rates = await fetchExchangeRates(currency, period, startDate, endDate);\r\n\r\n    if (rates.length === 0) {\r\n      console.error('No rates available to render the chart.');\r\n      return;\r\n    }\r\n\r\n    const labels = rates.map(rate => new Date(rate.date).toLocaleDateString());\r\n    const data = rates.map(rate => rate.rate);\r\n\r\n    // Calculate volatility and risk levels\r\n    const { volatility, riskLevels } = calculateVolatilityAndRisk(data);\r\n\r\n    const lineColors = getLineColors(riskLevels);\r\n\r\n    // Render the chart\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy(); // Clear previous chart if it exists\r\n    }\r\n\r\n    chartRef.current = new Chart(document.getElementById('exchangeRateChart').getContext('2d'), {\r\n      type: 'line',\r\n      data: {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: `Exchange Rate (${currency})`,\r\n          data: data,\r\n          borderColor: lineColors,\r\n          borderWidth: 2,\r\n          fill: false,\r\n          tension: 0.1,\r\n          pointBackgroundColor: lineColors\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          tooltip: {\r\n            callbacks: {\r\n              label: (tooltipItem) => {\r\n                const risk = riskLevels[tooltipItem.dataIndex - 1];\r\n                return `Rate: ${tooltipItem.raw}, Risk: ${risk}`;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Date'\r\n            }\r\n          },\r\n          y: {\r\n            title: {\r\n              display: true,\r\n              text: 'Exchange Rate'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const calculateVolatilityAndRisk = (data) => {\r\n    let volatility = [];\r\n    let riskLevels = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      const percentageChange = ((data[i] - data[i - 1]) / data[i - 1]) * 100;\r\n      volatility.push(Math.abs(percentageChange));\r\n      if (Math.abs(percentageChange) <= 1) {\r\n        riskLevels.push('Low');\r\n      } else if (Math.abs(percentageChange) > 1 && Math.abs(percentageChange) <= 3) {\r\n        riskLevels.push('Medium');\r\n      } else {\r\n        riskLevels.push('High');\r\n      }\r\n    }\r\n    return { volatility, riskLevels };\r\n  };\r\n\r\n  const getLineColors = (riskLevels) => {\r\n    return riskLevels.map(risk => {\r\n      if (risk === 'Low') {\r\n        return 'rgba(75, 192, 192, 1)'; // Green\r\n      } else if (risk === 'Medium') {\r\n        return 'rgba(255, 206, 86, 1)'; // Yellow\r\n      } else {\r\n        return 'rgba(255, 99, 132, 1)'; // Red\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFetchRates = () => {\r\n    renderChart();\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderChart(); // Initial rendering on component mount\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy(); // Clean up on unmount\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Exchange Rate Graph</h1>\r\n      <canvas id=\"exchangeRateChart\" width=\"600\" height=\"400\"></canvas>\r\n      <div>\r\n        <select value={currency} onChange={(e) => setCurrency(e.target.value)}>\r\n          <option value=\"USD\">USD</option>\r\n          {/* Add other currencies as needed */}\r\n        </select>\r\n        <select value={period} onChange={(e) => setPeriod(e.target.value)}>\r\n          <option value=\"1day\">Last 1 Day</option>\r\n          <option value=\"1week\">Last 1 Week</option>\r\n          <option value=\"1month\">Last 1 Month</option>\r\n          <option value=\"1year\">Last 1 Year</option>\r\n          <option value=\"custom\">Custom Date Range</option>\r\n        </select>\r\n        {period === 'custom' && (\r\n          <>\r\n            <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n            <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n          </>\r\n        )}\r\n        <button onClick={handleFetchRates}>Fetch Rates</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}