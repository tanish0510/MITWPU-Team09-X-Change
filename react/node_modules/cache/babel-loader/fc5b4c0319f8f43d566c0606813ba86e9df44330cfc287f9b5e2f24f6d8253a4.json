{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\currency-converter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Papa from \"papaparse\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\nimport HomePage from './HomePage'; // Importing the HomePage component\nimport FXRates from './FXRates'; // Importing the FX Rates component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currencyData, setCurrencyData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n  const [sortOption, setSortOption] = useState(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          const data = results.data;\n          const uniqueDates = [...new Set(data.map(row => row.Date))];\n          setDates(uniqueDates);\n          setCurrencyData(data);\n        }\n      });\n    }\n  };\n  const convertRates = (baseCurrency, formattedDate) => {\n    if (!formattedDate) return;\n    const selectedRow = currencyData.find(row => row.Date === formattedDate);\n    if (selectedRow) {\n      const baseRate = parseFloat(selectedRow[baseCurrency]);\n      const newRates = [{\n        Currency: baseCurrency,\n        ConvertedRate: \"1.0000\"\n      }];\n      Object.keys(selectedRow).filter(key => key !== 'Date' && key !== baseCurrency && key.trim() !== '').forEach(currency => {\n        const rate = parseFloat(selectedRow[currency]);\n        const convertedRate = isNaN(rate) || rate === 0 ? \"Invalid\" : (rate / baseRate).toFixed(4);\n        if (currency.trim() !== '') {\n          newRates.push({\n            Currency: currency,\n            ConvertedRate: convertedRate\n          });\n        }\n      });\n      setConvertedRates(newRates);\n    } else {\n      console.log(\"No data found for the selected date.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/fx-rates\",\n          children: /*#__PURE__*/_jsxDEV(FXRates, {\n            currencyData: currencyData,\n            dates: dates,\n            setDates: setDates,\n            setCurrencyData: setCurrencyData,\n            convertRates: convertRates // Pass convertRates function if needed\n            // Add other props as necessary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5ryJqA8/PhiFTnUj5EpqYtx0LBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Papa","Calendar","HomePage","FXRates","jsxDEV","_jsxDEV","App","_s","currencyData","setCurrencyData","dates","setDates","selectedDate","setSelectedDate","selectedCurrency","setSelectedCurrency","convertedRates","setConvertedRates","sortOption","setSortOption","handleFileUpload","event","file","target","files","parse","header","complete","results","data","uniqueDates","Set","map","row","Date","convertRates","baseCurrency","formattedDate","selectedRow","find","baseRate","parseFloat","newRates","Currency","ConvertedRate","Object","keys","filter","key","trim","forEach","currency","rate","convertedRate","isNaN","toFixed","push","console","log","children","className","path","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/currency-converter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Papa from \"papaparse\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\nimport HomePage from './HomePage'; // Importing the HomePage component\nimport FXRates from './FXRates'; // Importing the FX Rates component\n\nfunction App() {\n  const [currencyData, setCurrencyData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n  const [sortOption, setSortOption] = useState(null);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: (results) => {\n          const data = results.data;\n          const uniqueDates = [...new Set(data.map(row => row.Date))];\n          setDates(uniqueDates);\n          setCurrencyData(data);\n        }\n      });\n    }\n  };\n\n  const convertRates = (baseCurrency, formattedDate) => {\n    if (!formattedDate) return;\n\n    const selectedRow = currencyData.find(row => row.Date === formattedDate);\n\n    if (selectedRow) {\n      const baseRate = parseFloat(selectedRow[baseCurrency]);\n      const newRates = [{ Currency: baseCurrency, ConvertedRate: \"1.0000\" }];\n\n      Object.keys(selectedRow)\n        .filter(key => key !== 'Date' && key !== baseCurrency && key.trim() !== '')\n        .forEach(currency => {\n          const rate = parseFloat(selectedRow[currency]);\n          const convertedRate = isNaN(rate) || rate === 0 ? \"Invalid\" : (rate / baseRate).toFixed(4);\n\n          if (currency.trim() !== '') {\n            newRates.push({ Currency: currency, ConvertedRate: convertedRate });\n          }\n        });\n\n      setConvertedRates(newRates);\n    } else {\n      console.log(\"No data found for the selected date.\");\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/fx-rates\">\n            <FXRates \n              currencyData={currencyData}\n              dates={dates}\n              setDates={setDates}\n              setCurrencyData={setCurrencyData}\n              convertRates={convertRates} // Pass convertRates function if needed\n              // Add other props as necessary\n            />\n          </Route>\n          {/* Add additional routes here for other pages */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}