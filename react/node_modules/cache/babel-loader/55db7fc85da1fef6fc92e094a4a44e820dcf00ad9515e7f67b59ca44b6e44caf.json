{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\currency-converter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Select from \"react-select\";\nimport './App.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currencyData, setCurrencyData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [conversionRate, setConversionRate] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          const data = results.data;\n          const uniqueDates = [...new Set(data.map(row => row.Date))];\n          setDates(uniqueDates);\n          setCurrencyData(data);\n        }\n      });\n    }\n  };\n  const convertRates = baseCurrency => {\n    if (!selectedDate) return;\n    const selectedRow = currencyData.find(row => row.Date === selectedDate);\n    if (selectedRow) {\n      const baseRate = parseFloat(selectedRow[baseCurrency]);\n      setConversionRate(baseRate);\n      const newRates = Object.keys(selectedRow).filter(key => key !== 'Date' && key !== baseCurrency).map(currency => ({\n        Currency: currency,\n        ConvertedRate: (parseFloat(selectedRow[currency]) / baseRate).toFixed(4)\n      }));\n      setConvertedRates(newRates);\n    }\n  };\n  const dateOptions = dates.map(date => ({\n    value: date,\n    label: date\n  }));\n  const currencyOptions = currencyData.length > 0 ? Object.keys(currencyData[0]).filter(key => key !== 'Date').map(currency => ({\n    value: currency,\n    label: currency\n  })) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), dates.length > 0 && /*#__PURE__*/_jsxDEV(Select, {\n      options: dateOptions,\n      onChange: option => setSelectedDate(option.value),\n      placeholder: \"Select Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), currencyData.length > 0 && selectedDate && /*#__PURE__*/_jsxDEV(Select, {\n      options: currencyOptions,\n      onChange: option => {\n        setSelectedCurrency(option.value);\n        convertRates(option.value);\n      },\n      placeholder: \"Select Base Currency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), selectedCurrency && conversionRate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversion-rate\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Conversion Rate for \", selectedCurrency, \" (Base Currency): \", conversionRate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), convertedRates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"converted-rates\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Converted Rates (relative to \", selectedCurrency, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Converted Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: convertedRates.map((currency, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: currency.Currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currency.ConvertedRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kXXMY92Axxd4sqXVaToAK041Cek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Papa","Select","jsxDEV","_jsxDEV","App","_s","currencyData","setCurrencyData","dates","setDates","selectedDate","setSelectedDate","selectedCurrency","setSelectedCurrency","conversionRate","setConversionRate","convertedRates","setConvertedRates","handleFileUpload","event","file","target","files","parse","header","complete","results","data","uniqueDates","Set","map","row","Date","convertRates","baseCurrency","selectedRow","find","baseRate","parseFloat","newRates","Object","keys","filter","key","currency","Currency","ConvertedRate","toFixed","dateOptions","date","value","label","currencyOptions","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","options","option","placeholder","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/currency-converter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Select from \"react-select\";\nimport './App.css'; // Import your CSS file\n\nfunction App() {\n  const [currencyData, setCurrencyData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [conversionRate, setConversionRate] = useState(null);\n  const [convertedRates, setConvertedRates] = useState([]);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: (results) => {\n          const data = results.data;\n          const uniqueDates = [...new Set(data.map(row => row.Date))];\n          setDates(uniqueDates);\n          setCurrencyData(data);\n        }\n      });\n    }\n  };\n\n  const convertRates = (baseCurrency) => {\n    if (!selectedDate) return;\n\n    const selectedRow = currencyData.find(row => row.Date === selectedDate);\n\n    if (selectedRow) {\n      const baseRate = parseFloat(selectedRow[baseCurrency]);\n      setConversionRate(baseRate);\n\n      const newRates = Object.keys(selectedRow)\n        .filter(key => key !== 'Date' && key !== baseCurrency)\n        .map(currency => ({\n          Currency: currency,\n          ConvertedRate: (parseFloat(selectedRow[currency]) / baseRate).toFixed(4),\n        }));\n\n      setConvertedRates(newRates);\n    }\n  };\n\n  const dateOptions = dates.map(date => ({ value: date, label: date }));\n  const currencyOptions = currencyData.length > 0\n    ? Object.keys(currencyData[0]).filter(key => key !== 'Date').map(currency => ({\n        value: currency,\n        label: currency,\n      }))\n    : [];\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Converter</h1>\n\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n\n      {dates.length > 0 && (\n        <Select\n          options={dateOptions}\n          onChange={(option) => setSelectedDate(option.value)}\n          placeholder=\"Select Date\"\n        />\n      )}\n\n      {currencyData.length > 0 && selectedDate && (\n        <Select\n          options={currencyOptions}\n          onChange={(option) => {\n            setSelectedCurrency(option.value);\n            convertRates(option.value);\n          }}\n          placeholder=\"Select Base Currency\"\n        />\n      )}\n\n      {selectedCurrency && conversionRate && (\n        <div className=\"conversion-rate\">\n          <h2>\n            Conversion Rate for {selectedCurrency} (Base Currency): {conversionRate}\n          </h2>\n        </div>\n      )}\n\n      {convertedRates.length > 0 && (\n        <div className=\"converted-rates\">\n          <h3>Converted Rates (relative to {selectedCurrency}):</h3>\n          <table>\n            <thead>\n              <tr>\n                <th>Currency</th>\n                <th>Converted Rate</th>\n              </tr>\n            </thead>\n            <tbody>\n              {convertedRates.map((currency, index) => (\n                <tr key={index}>\n                  <td>{currency.Currency}</td>\n                  <td>{currency.ConvertedRate}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}