{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\currency-converter\\\\src\\\\FXRates.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Papa from 'papaparse'; // For parsing CSV files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FXRates = () => {\n  _s();\n  const [exchangeRates, setExchangeRates] = useState([]);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        // Assuming the CSV has a structure with 'currency' and 'rate' columns\n        if (results.data.length > 0) {\n          setExchangeRates(results.data);\n        } else {\n          setError('No data found in the file.');\n        }\n      },\n      error: err => {\n        setError('Error parsing file: ' + err.message);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"FX Rates for All Currencies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), exchangeRates.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: exchangeRates.map((rate, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.rate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(FXRates, \"0vhcf489cOjyYFNVtMvDRH3Y/hs=\");\n_c = FXRates;\nexport default FXRates;\nvar _c;\n$RefreshReg$(_c, \"FXRates\");","map":{"version":3,"names":["React","useState","Papa","jsxDEV","_jsxDEV","FXRates","_s","exchangeRates","setExchangeRates","error","setError","handleFileChange","event","file","target","files","parse","header","skipEmptyLines","complete","results","data","length","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","map","rate","index","currency","_c","$RefreshReg$"],"sources":["C:/Users/Admin/currency-converter/src/FXRates.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Papa from 'papaparse'; // For parsing CSV files\r\n\r\nconst FXRates = () => {\r\n    const [exchangeRates, setExchangeRates] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        Papa.parse(file, {\r\n            header: true,\r\n            skipEmptyLines: true,\r\n            complete: (results) => {\r\n                // Assuming the CSV has a structure with 'currency' and 'rate' columns\r\n                if (results.data.length > 0) {\r\n                    setExchangeRates(results.data);\r\n                } else {\r\n                    setError('No data found in the file.');\r\n                }\r\n            },\r\n            error: (err) => {\r\n                setError('Error parsing file: ' + err.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>FX Rates for All Currencies</h2>\r\n            <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {exchangeRates.length > 0 && (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Currency</th>\r\n                            <th>Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {exchangeRates.map((rate, index) => (\r\n                            <tr key={index}>\r\n                                <td>{rate.currency}</td>\r\n                                <td>{rate.rate}</td> {/* Adjust based on your CSV structure */}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FXRates;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}